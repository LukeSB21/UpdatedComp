<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DatabaseDataSet1" targetNamespace="http://tempuri.org/DatabaseDataSet1.xsd" xmlns:mstns="http://tempuri.org/DatabaseDataSet1.xsd" xmlns="http://tempuri.org/DatabaseDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LoginForm.Properties.Settings.GlobalReference.Default.DatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="departmentTableAdapter" GeneratorDataComponentClassName="departmentTableAdapter" Name="department" UserDataComponentName="departmentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.department" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[department] WHERE (([departmentId] = @Original_departmentId) AND ((@IsNull_departmentName = 1 AND [departmentName] IS NULL) OR ([departmentName] = @Original_departmentName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_departmentName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_departmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="departmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[department] ([departmentName]) VALUES (@departmentName);
SELECT departmentId, departmentName FROM department WHERE (departmentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@departmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="departmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT departmentId, departmentName FROM dbo.department</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[department] SET [departmentName] = @departmentName WHERE (([departmentId] = @Original_departmentId) AND ((@IsNull_departmentName = 1 AND [departmentName] IS NULL) OR ([departmentName] = @Original_departmentName)));
SELECT departmentId, departmentName FROM department WHERE (departmentId = @departmentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@departmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="departmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_departmentName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_departmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="departmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="departmentId" ColumnName="departmentId" DataSourceName="[I:\LOGINFORM\LOGINFORM\DATABASE.MDF].dbo.department" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@departmentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="departmentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="departmentId" DataSetColumn="departmentId" />
              <Mapping SourceColumn="departmentName" DataSetColumn="departmentName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="roleTableAdapter" GeneratorDataComponentClassName="roleTableAdapter" Name="role" UserDataComponentName="roleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DatabaseConnectionString (Settings)" DbObjectName="dbo.role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[role] WHERE (([roleId] = @Original_roleId) AND ([roleName] = @Original_roleName) AND ((@IsNull_seniority = 1 AND [seniority] IS NULL) OR ([seniority] = @Original_seniority)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_roleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_seniority" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seniority" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seniority" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seniority" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[role] ([roleName], [seniority]) VALUES (@roleName, @seniority);
SELECT roleId, roleName, seniority FROM role WHERE (roleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@roleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seniority" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seniority" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT roleId, roleName, seniority FROM dbo.role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[role] SET [roleName] = @roleName, [seniority] = @seniority WHERE (([roleId] = @Original_roleId) AND ([roleName] = @Original_roleName) AND ((@IsNull_seniority = 1 AND [seniority] IS NULL) OR ([seniority] = @Original_seniority)));
SELECT roleId, roleName, seniority FROM role WHERE (roleId = @roleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@roleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@seniority" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seniority" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_roleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="roleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_seniority" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seniority" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_seniority" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="seniority" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="roleId" DataSourceName="[I:\LOGINFORM\LOGINFORM\DATABASE.MDF].dbo.role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="roleId" DataSetColumn="roleId" />
              <Mapping SourceColumn="roleName" DataSetColumn="roleName" />
              <Mapping SourceColumn="seniority" DataSetColumn="seniority" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DatabaseDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DatabaseDataSet1" msprop:Generator_UserDSName="DatabaseDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="department" msprop:Generator_TableClassName="departmentDataTable" msprop:Generator_TableVarName="tabledepartment" msprop:Generator_TablePropName="department" msprop:Generator_RowDeletingName="departmentRowDeleting" msprop:Generator_RowChangingName="departmentRowChanging" msprop:Generator_RowEvHandlerName="departmentRowChangeEventHandler" msprop:Generator_RowDeletedName="departmentRowDeleted" msprop:Generator_UserTableName="department" msprop:Generator_RowChangedName="departmentRowChanged" msprop:Generator_RowEvArgName="departmentRowChangeEvent" msprop:Generator_RowClassName="departmentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="departmentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndepartmentId" msprop:Generator_ColumnPropNameInRow="departmentId" msprop:Generator_ColumnPropNameInTable="departmentIdColumn" msprop:Generator_UserColumnName="departmentId" type="xs:int" />
              <xs:element name="departmentName" msprop:Generator_ColumnVarNameInTable="columndepartmentName" msprop:Generator_ColumnPropNameInRow="departmentName" msprop:Generator_ColumnPropNameInTable="departmentNameColumn" msprop:Generator_UserColumnName="departmentName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="role" msprop:Generator_TableClassName="roleDataTable" msprop:Generator_TableVarName="tablerole" msprop:Generator_TablePropName="role" msprop:Generator_RowDeletingName="roleRowDeleting" msprop:Generator_RowChangingName="roleRowChanging" msprop:Generator_RowEvHandlerName="roleRowChangeEventHandler" msprop:Generator_RowDeletedName="roleRowDeleted" msprop:Generator_UserTableName="role" msprop:Generator_RowChangedName="roleRowChanged" msprop:Generator_RowEvArgName="roleRowChangeEvent" msprop:Generator_RowClassName="roleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="roleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnroleId" msprop:Generator_ColumnPropNameInRow="roleId" msprop:Generator_ColumnPropNameInTable="roleIdColumn" msprop:Generator_UserColumnName="roleId" type="xs:int" />
              <xs:element name="roleName" msprop:Generator_ColumnVarNameInTable="columnroleName" msprop:Generator_ColumnPropNameInRow="roleName" msprop:Generator_ColumnPropNameInTable="roleNameColumn" msprop:Generator_UserColumnName="roleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="seniority" msprop:Generator_ColumnVarNameInTable="columnseniority" msprop:Generator_ColumnPropNameInRow="seniority" msprop:Generator_ColumnPropNameInTable="seniorityColumn" msprop:Generator_UserColumnName="seniority" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:department" />
      <xs:field xpath="mstns:departmentId" />
    </xs:unique>
    <xs:unique name="role_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:role" />
      <xs:field xpath="mstns:roleId" />
    </xs:unique>
  </xs:element>
</xs:schema>